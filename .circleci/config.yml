version: 2.1

executors:
  setup:
    docker:
      - image: ruby:2.6-slim-stretch
    environment:
        DEBIAN_FRONTEND: noninteractive
        RUBYOPT: -EUTF-8
commands:
  setup_environment:
    description: "setup environment" 
    steps:
      - checkout
      - run:
          command: |
            apt-get update
            apt-get install -y build-essential zlib1g-dev libssl-dev libreadline-dev libyaml-dev libcurl4-openssl-dev libffi-dev pkg-config
            apt-get install -y apache2 apache2-dev libapr1-dev libaprutil1-dev
            apt-get install -y imagemagick libmagick++-dev ghostscript
            apt-get install -y cvs mercurial subversion git bzr
            apt-get install -y debconf-utils tzdata wget sudo
            apt-get install -y curl unzip
  setup_postgres:
    description: "setup postgres" 
    steps:
      - run:
          command: |
            apt-get install -y gnupg gnupg2
            echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' >> /etc/apt/sources.list.d/pgdg.list
            wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
            apt-get update
            apt-get install -y postgresql-client-10 postgresql-10 postgresql-server-dev-10
            /etc/init.d/postgresql start
            su - postgres -c "psql -U postgres -d postgres -c \"alter user postgres with password 'postgres';\"" 
  setup_mysql:
    description: "setup mysql" 
    steps:
      - run:
          command: |
            echo 'mysql-server mysql-server/root_password password redmine' | debconf-set-selections
            echo 'mysql-server mysql-server/root_password_again password redmine' | debconf-set-selections
            wget https://dev.mysql.com/get/mysql-apt-config_0.8.9-1_all.deb
            apt-get install -y ./mysql-apt-config_0.8.9-1_all.deb
            apt-get update
            apt-get install -y --allow-unauthenticated mysql-community-server default-libmysqlclient-dev
            /etc/init.d/mysql start
            mysql -u root -predmine -e "CREATE DATABASE redmine CHARACTER SET utf8mb4;" 
            mysql -u root -predmine -e "CREATE USER 'redmine'@'localhost' IDENTIFIED BY 'redmine';" 
            mysql -u root -predmine -e "GRANT ALL PRIVILEGES ON redmine.* TO 'redmine'@'localhost';" 
            mysql -u root -predmine -e "FLUSH PRIVILEGES;" 
  install_chromedriver:
    description: "install chromedriver" 
    steps:
      - run:
          command: |
            wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
            echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
            rm -rf /var/lib/apt/lists/*
            apt-get update
            apt-get install -y --allow-unauthenticated google-chrome-stable
            wget http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip
            unzip chromedriver_linux64.zip
            chmod 755 chromedriver
            mv chromedriver /usr/local/bin/
  build_myredmine:
    description: "build MyRedmine" 
    steps:
      - run:
          command: |
            cp .circleci/files/skip_test.rb lib/redmine/skip_test.rb
            git clone https://github.com/akiko-pusu/redmine_issue_templates plugins/redmine_issue_templates
            cp plugins/redmine_issue_templates/Gemfile.local plugins/redmine_issue_templates/Gemfile
            git clone https://github.com/onozaty/redmine-view-customize plugins/view_customize
            git clone https://github.com/vividtone/redmine_vividtone_my_page_blocks plugins/redmine_vividtone_my_page_blocks
  change_database:
    parameters:
      database:
        type: string
    steps:
      - run:
          working_directory: lib/redmine
          command: |
            cp ../../.circleci/files/<< parameters.database >>_database.yml ../../config/database.yml
            bundle install
            bundle exec rake db:drop RAILS_ENV=test
            bundle exec rake db:create RAILS_ENV=test
            bundle exec rails db:environment:set RAILS_ENV=test
            bundle exec rake generate_secret_token
            bundle exec rake db:migrate RAILS_ENV=test
            bundle exec rake test:scm:setup:all
            bundle exec rake test:scm:update
            bundle exec rake redmine:plugins:migrate NAME=redmine_issue_templates RAILS_ENV=test
            bundle exec rake redmine:plugins:migrate NAME=view_customize RAILS_ENV=test
            bundle exec rake redmine:plugins:migrate NAME=redmine_vividtone_my_page_blocks RAILS_ENV=test
  test_redmine:
    parameters:
      time_zone:
        type: string
      skip_test:
        type: string
    description: "test redmine utc" 
    steps:
      - run:
          working_directory: lib/redmine
          command: |
            touch build_result.txt
            ruby skip_test.rb << parameters.skip_test >>
            echo "config.time_zone = '<< parameters.time_zone >>'" > ../../config/additional_environment.rb
            bundle exec rails runner "p Time.current" -e test
            bundle exec rake test
            bundle exec rake redmine:plugins:test NAME=redmine_issue_templates RAILS_ENV=test
            DRIVER=headless RAILS_ENV=test bundle exec rspec -I ../../plugins/redmine_issue_templates/spec
            cat build_result.txt
      - run:
          command: |
            echo "fail test-utc" 
            cat build_result.txt
          when: on_fail
jobs:
  redmine-test:
    executor:
      name: setup
    steps:
      - setup_environment
      - setup_postgres
      - setup_mysql
      - install_chromedriver
      - build_myredmine
      - change_database:
          database: "postgres" 
      - test_redmine:
          time_zone: "UTC" 
          skip_test: "UTC_SKIP_TESTS" 
      - test_redmine:
          time_zone: "Tokyo" 
          skip_test: "TOKYO_SKIP_TESTS" 
      - test_redmine:
          time_zone: "American Samoa" 
          skip_test: "SAMOA_SKIP_TESTS" 
      - change_database:
          database: "mysql" 
      - test_redmine:
          time_zone: "UTC" 
          skip_test: "UTC_SKIP_TESTS" 
      - test_redmine:
          time_zone: "Tokyo" 
          skip_test: "TOKYO_SKIP_TESTS" 
      - test_redmine:
          time_zone: "American Samoa" 
          skip_test: "SAMOA_SKIP_TESTS" 
workflows:
  normal:
    jobs:
      - redmine-test:
          filters:
            branches:
              only:
                - master
                - stable-1.1
                - stable-1.0
